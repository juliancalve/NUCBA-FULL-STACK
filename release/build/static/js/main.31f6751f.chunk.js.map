{"version":3,"sources":["logo.svg","components/CreateUser.js","components/AllUsers.js","App.js","reportWebVitals.js","index.js"],"names":["CreateUser","getUsers","useState","user","setUser","handleChange","e","target","name","value","onCreate","a","axios","post","alert","onChange","placeholder","onClick","AllUsers","changed","users","setUsers","onGetUsers","get","response","data","useEffect","map","u","_id","firstName","lastName","age","email","App","setChanged","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,kECoCAA,EAjCI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTC,mBAAS,IADA,mBAC1BC,EAD0B,KACpBC,EADoB,KAG3BC,EAAe,SAACC,GAClBF,EAAQ,2BACDD,GADA,kBAEFG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAI5BC,EAAQ,uCAAG,sBAAAC,EAAA,+EAEaC,IAAMC,KAAK,+CAAX,eACnBV,IAHM,cAKVF,IALU,gDAOTa,MAAM,EAAD,IAPI,yDAAH,qDAWd,OACI,gCACI,uBAAOC,SAAUV,EAAcG,KAAK,YAAYQ,YAAY,cAC5D,uBAAOD,SAAUV,EAAcG,KAAK,WAAWQ,YAAY,aAC3D,uBAAOD,SAAUV,EAAcG,KAAK,MAAMQ,YAAY,QACtD,uBAAOD,SAAUV,EAAcG,KAAK,QAAQQ,YAAY,UACxD,uBAAOD,SAAUV,EAAcG,KAAK,WAAWQ,YAAY,aAC3D,wBAAQC,QAASP,EAAjB,wBCgBGQ,EA5CE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACHjB,mBAAS,IADN,mBACvBkB,EADuB,KAChBC,EADgB,KAGxBC,EAAU,uCAAG,4BAAAX,EAAA,+EAEYC,IAAMW,IAAI,gDAFtB,OAELC,EAFK,OAGXH,EAASG,EAASC,KAAKA,MAHZ,gDAKXX,MAAM,EAAD,IALM,yDAAH,qDAchB,OALAY,qBAAU,WACNJ,MACD,CAACH,IAIA,8BACI,kCACI,gCACI,+BACI,oCACA,2CACA,0CACA,qCACA,4CAGR,gCACKC,EAAMO,KAAK,SAAAC,GAAC,OAAI,+BACb,oCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAGC,MACR,oCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAGE,YACR,oCAAKF,QAAL,IAAKA,OAAL,EAAKA,EAAGG,WACR,oCAAKH,QAAL,IAAKA,OAAL,EAAKA,EAAGI,MACR,oCAAKJ,QAAL,IAAKA,OAAL,EAAKA,EAAGK,sBCnBjBC,MAbf,WAAgB,IAAD,EACiBhC,oBAAS,GAD1B,mBACNiB,EADM,KACGgB,EADH,KAGb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAYnC,SAAU,kBAAMkC,GAAYhB,MACxC,cAAC,EAAD,CAAUA,QAASA,UCDZkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.31f6751f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst CreateUser = ({ getUsers }) => {\r\n    const [user, setUser] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onCreate = async () => {\r\n        try {\r\n           const response = await axios.post('https://release-nucba.herokuapp.com/api/user', {\r\n            ...user\r\n           });\r\n           getUsers();\r\n        } catch( error ){\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input onChange={handleChange} name='firstName' placeholder='firstName' />\r\n            <input onChange={handleChange} name='lastName' placeholder='lastName'/>\r\n            <input onChange={handleChange} name='age' placeholder='age'/>\r\n            <input onChange={handleChange} name='email' placeholder='email'/>\r\n            <input onChange={handleChange} name='password' placeholder='password'/>\r\n            <button onClick={onCreate}>Create</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateUser\r\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst AllUsers = ({ changed }) => {\r\n    const [users, setUsers]  = useState([]);\r\n\r\n    const onGetUsers = async () => {\r\n        try {\r\n            const response = await axios.get('https://release-nucba.herokuapp.com/api/user');\r\n            setUsers(response.data.data);\r\n        } catch( error ){\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        onGetUsers()\r\n    }, [changed])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>firstName</th>\r\n                        <th>lastName</th>\r\n                        <th>age</th>\r\n                        <th>email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map( u => <tr>\r\n                        <td>{u?._id}</td>\r\n                        <td>{u?.firstName}</td>\r\n                        <td>{u?.lastName}</td>\r\n                        <td>{u?.age}</td>\r\n                        <td>{u?.email}</td>\r\n                    </tr>)}\r\n                    \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllUsers\r\n","import { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CreateUser from './components/CreateUser';\nimport AllUsers from './components/AllUsers';\n\nfunction App() {\n  const [changed, setChanged] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <CreateUser getUsers={() => setChanged(!changed)}/>\n        <AllUsers changed={changed}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}